name: Deploy on development server
on:
  push:
    branches: [develop]
jobs:
  init:
    runs-on: [development]
    steps:
      - name: Check directory exist
        id: check-directory
        continue-on-error: true
        run: |
          cd ./dev/
          echo ::set-output name=exist::true
      - name: Update exist project
        if: steps.check-directory.outputs.exist == 'true'
        run: |
          cd ./dev/
          git checkout develop
          git add .
          git reset --hard
          git fetch origin --tags
          git pull
      - name: Deploy new project
        if: steps.check-directory.outputs.exist != 'true'
        run: |
          git clone git@github.com:tchevalleraud/symfony-docker-project.git
          mv symfony-docker-project/ dev/
          cd ./dev/
          git checkout develop
      - name: Update environment
        run: |
          cd ./dev/
          rm -f .env
          touch .env
          echo "APP_ENV=dev" >> .env
          echo "APP_NAME=\"symfony docker project\"" >> .env
          echo "APP_SECRET=\"${{ secrets.APP_SECRET }}\"" >> .env
          echo "DATABASE_LOCAL_URL=\"sqlite:///%kernel.project_dir%/var/local.db\"" >> .env
          echo "DATABASE_MYSQL_URL=\"mysql://root:${{ secrets.DATABASE_MYSQL_PASSWORD }}@database:3306/symfony-docker-project\"" >> .env
          rm -f ./docker/.password
          echo "DATABASE_MYSQL_PASSWORD=${{ secrets.DATABASE_MYSQL_PASSWORD }}" >> ./docker/.password
  build:
    runs-on: [ development ]
    needs: [ init ]
    steps:
      - name: Build docker image
        run: |
          cd ./dev/
          make docker-build
      - name: Build dependancies
        run: |
          cd ./dev/
          make vendor/autoload.php
          make public/assets-dev
  deploy:
    runs-on: [ development ]
    needs: [ build ]
    steps:
      - name: Start docker environment
        run: |
          cd ./dev/
          make server-start
          sleep 30
      - name: Database deployment
        run: |
          cd ./dev/
          make doctrine-database-drop
          make doctrine-database-create
      - name: Cache clear
        run: |
          cd ./dev/
          make cache-clear